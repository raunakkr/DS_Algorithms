//Program to find maximum PATH sum in rwo srted array containing common elements
#include<stdio.h>
#include<limits.h>



int max(int a,int b){return a>b?a:b;}

int find_max_sum(int a[],int b[],int m,int n){
	int flag,i,j,sum1,sum2,max_sum=0;

	i=0;j=0;sum1=0;sum2=0; flag=0;

	while(i<m && j<n){

		if(a[i]==b[j])
		  {
			  sum1+=a[i];
			  sum2+=a[i];
			  i++;j++;
			 max_sum+=max(sum1,sum2);
			 sum1=0;sum2=0;
			 flag=1;

			  }

		 else if(a[i]<b[j]){sum1+=a[i];i++;}
		 else if(a[i]>b[j]){sum2+=b[j];j++;}

		 printf(">>>>>>>>%d\n",max_sum);

}
		max_sum+=max(sum1,sum2);

		sum1=0;sum2=0;
printf("%d-%d %d=%d=%d",i,j,sum1,sum2,max_sum);
while(i<=m-1){sum1+=a[i]; i++;   }
  while(j<=n-1){sum2+=b[j]; j++;}


					max_sum+=max(sum1,sum2);



	 return max_sum;


}




int main(){

  int a[]={2, 3, 7, 10, 12, 15, 30, 34};
  int b[]={1, 5, 7, 8, 10, 15, 16, 19};
  int m=sizeof(a)/sizeof(a[0]);
	int n=sizeof(b)/sizeof(b[0]);
  printf("Maximum sum path is  %d",find_max_sum(a,b,m,n));


return 0;

}